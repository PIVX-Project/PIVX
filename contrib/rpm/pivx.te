policy_module(hemis, 1.100.1)

########################################
#
# Declarations
#

type hemis_t;
type hemis_exec_t;
init_daemon_domain(hemis_t, hemis_exec_t)

permissive hemis_t;

type hemis_initrc_exec_t;
init_script_file(hemis_initrc_exec_t)

type hemis_conf_t;
files_type(hemis_conf_t)

type hemis_var_lib_t;
files_type(hemis_var_lib_t)

type hemis_var_run_t;
files_type(hemis_var_run_t)

type hemis_port_t;
corenet_port(hemis_port_t)

########################################
#
# hemis local policy
#
allow hemis_t self:process { fork };

allow hemis_t self:fifo_file rw_fifo_file_perms;
allow hemis_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(hemis_t, hemis_conf_t, hemis_conf_t)
manage_files_pattern(hemis_t, hemis_conf_t, hemis_conf_t)

manage_dirs_pattern(hemis_t, hemis_var_lib_t, hemis_var_lib_t)
manage_files_pattern(hemis_t, hemis_var_lib_t, hemis_var_lib_t)
files_var_lib_filetrans(hemis_t, hemis_var_lib_t, { dir file })

manage_dirs_pattern(hemis_t, hemis_var_run_t, hemis_var_run_t)
manage_files_pattern(hemis_t, hemis_var_run_t, hemis_var_run_t)

sysnet_dns_name_resolve(hemis_t)
corenet_all_recvfrom_unlabeled(hemis_t)

allow hemis_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(hemis_t)
corenet_tcp_sendrecv_generic_node(hemis_t)
corenet_tcp_sendrecv_all_ports(hemis_t)
corenet_tcp_bind_generic_node(hemis_t)

gen_require(`
    type hemis_port_t;
')
allow hemis_t hemis_port_t:tcp_socket name_bind;

gen_require(`
    type hemis_port_t;
')
allow hemis_t hemis_port_t:tcp_socket name_connect;

domain_use_interactive_fds(hemis_t)

files_read_etc_files(hemis_t)

miscfiles_read_localization(hemis_t)

sysnet_dns_name_resolve(hemis_t)

allow hemis_t hemis_exec_t:file execute_no_trans;
allow hemis_t self:process setsched;
corecmd_exec_ls(hemis_t)
corenet_tcp_connect_http_port(hemis_t)
dev_read_urand(hemis_t)
fs_getattr_xattr_fs(hemis_t)
kernel_read_system_state(hemis_t)
